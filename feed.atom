<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">vBlog</title>
  <id>/feed.atom</id>
  <updated>2015-05-09T10:47:00Z</updated>
  <link href="/feed.atom" rel="self" />
  <author>
    <name>Vlad Vasiliu</name>
  </author>
  <generator>PyAtom</generator>
  <entry xml:base="/feed.atom">
    <title type="text">IPv6 prefix delegation with static address and dhclient on Ubuntu / Debian</title>
    <id>/post/20140509-IPv6_prefix_delegation_with_dhclient_and_static_ip.html</id>
    <updated>2015-05-09T10:47:00Z</updated>
    <link href="/post/20140509-IPv6_prefix_delegation_with_dhclient_and_static_ip.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;Some hosting providers, like &lt;a href="http://online.net"&gt;Online&lt;/a&gt; in France provide IPv6 access via prefix delegation. You get a DUID that has to be sent to their DHCP server. The IP address is configured by the client.&lt;/p&gt;

&lt;p&gt;The recommended method is using Dibbler, but this solution is pretty buggy.&lt;/p&gt;

&lt;p&gt;When using &lt;code&gt;dhclient&lt;/code&gt; on Ubuntu or Debian (other systems might have a similar behaviour) with a static address, the interface doesn&amp;#39;t end up with the IP set. The solution is to pass the &lt;code&gt;-N&lt;/code&gt; option to dhclient, to only request stateless configuration.&lt;/p&gt;

&lt;p&gt;Below are samples of &lt;code&gt;dhclient6.conf&lt;/code&gt; and &lt;code&gt;interfaces&lt;/code&gt;. Note that in this configuration everything is configured by the client, but you could request a name server from the DHCP server.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/dhcp/dhclient6.conf&lt;/code&gt;:&lt;/p&gt;

            &lt;div class="highlight"&gt;
              &lt;pre&gt;&lt;code&gt;interface &amp;quot;em1&amp;quot; {
    send dhcp6.client-id your_duid;
    request;
}&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
            
&lt;p&gt;&lt;code&gt;/etc/network/interfaces&lt;/code&gt;:&lt;/p&gt;

            &lt;div class="highlight"&gt;
              &lt;pre&gt;&lt;code&gt;auto em1
iface em1 inet6 static
    address your_ip_v6_address
    netmask your_nemask
    accept_ra 1
    post-up /sbin/dhclient -cf /etc/dhcp/dhclient6.conf -6 -P -N em1&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
            </content>
  </entry>
  <entry xml:base="/feed.atom">
    <title type="text">Running rabbitmqctl as root</title>
    <id>/post/20140425-running_rabbitmqctl_as_root.html</id>
    <updated>2014-04-25T11:42:00Z</updated>
    <link href="/post/20140425-running_rabbitmqctl_as_root.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;On some Linux distributions, running &lt;code&gt;rabbitmqctl&lt;/code&gt; as root may fail with the following error:&lt;/p&gt;

            &lt;div class="highlight"&gt;
              &lt;pre&gt;&lt;code&gt;Error: unable to connect to node rabbit@host: nodedown



    DIAGNOSTICS

    ===========



    attempted to contact: [rabbit@host]



    rabbit@host:

      * found rabbit (port 25672)

      * TCP connection succeeded

      * suggestion: hostname mismatch?

      * suggestion: is the cookie set correctly?



    current node details:

    - node name: rabbitmqctl19092@localhost

    - home dir: /root

    - cookie hash: B+onVMMDnR1uRT2nuD24VA==&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
            
&lt;p&gt;Assuming that the hostname is correct and running &lt;code&gt;rabbitmqctl&lt;/code&gt; as the rabbitmq user works, this is a cookie mismatch problem.&lt;/p&gt;

&lt;p&gt;In order to be able to run &lt;code&gt;rabbitmqctl&lt;/code&gt; as root, it must use the same cookie as the one used by the server. This cookie is usually found in &lt;code&gt;/var/lib/rabbitmq/.erlang.cookie&lt;/code&gt;. To use this cookie, the &lt;code&gt;HOME&lt;/code&gt; environment must be set to &lt;code&gt;/var/lib/rabbitmq&lt;/code&gt;. Either create a wrapper around &lt;code&gt;/usr/bin/rabbitmqctl&lt;/code&gt; that sets the correct environment, or edit this file to add &lt;code&gt;HOME=/var/lib/rabbitmq&lt;/code&gt; on the line that starts with &lt;code&gt;exec ${ERL_DIR}&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="/feed.atom">
    <title type="text">Installing Powerline on Mac OS X</title>
    <id>/post/20130819-1225-Powerline_on_mac_os_x.html</id>
    <updated>2013-08-19T12:25:00Z</updated>
    <link href="/post/20130819-1225-Powerline_on_mac_os_x.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;While installing &lt;a href="https://github.com/Lokaltog/powerline"&gt;Powerline&lt;/a&gt; on MacOS X following the &lt;a href="https://powerline.readthedocs.org/en/latest/installation/osx.html#installation-osx"&gt;documentation&lt;/a&gt;, there are some import problems.&lt;/p&gt;

&lt;p&gt;It turns out that running &lt;code&gt;python setup.py install&lt;/code&gt; installs everything into &lt;code&gt;/path/to/site-packages/Powerline-beta-py2.7.egg/&lt;/code&gt;. This folder should be named &lt;code&gt;powerline&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;Symlinking the included &lt;code&gt;powerline&lt;/code&gt; folder to &lt;code&gt;site-packages/powerline&lt;/code&gt; seems to fix this.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="/feed.atom">
    <title type="text">Building ZSH with zpython module on MacOS X</title>
    <id>/post/20130819-1218-zsh_with_python_module_on_mac_os_x.html</id>
    <updated>2013-08-19T12:19:00Z</updated>
    <link href="/post/20130819-1218-zsh_with_python_module_on_mac_os_x.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;There is a fork of ZSH that has a Python module. It is able to run &lt;a href="https://github.com/Lokaltog/powerline"&gt;Powerline&lt;/a&gt; smoothly.&lt;/p&gt;

&lt;p&gt;However, on MacOS X, it doesn&amp;#39;t correctly detect the Python libs upon compilation. There seems to be a similar problem for Vim with python support: &lt;a href="http://stackoverflow.com/questions/6490513/vim-failing-to-compile-with-python-on-os-x"&gt;http://stackoverflow.com/questions/6490513/vim-failing-to-compile-with-python-on-os-x&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The workaround is the same. Editing the &lt;code&gt;Makefile&lt;/code&gt; in the &lt;code&gt;config&lt;/code&gt; directory of the Python installation fixes this. The modification is &lt;code&gt;PYTHONFRAMEWORKINSTALLDIR&lt;/code&gt; instead of &lt;code&gt;PYTHONFRAMEWORKDIR&lt;/code&gt; on the line beginning with &lt;code&gt;LINKFORSHARED&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="/feed.atom">
    <title type="text">Setting default NFSv4 ACLs on FreeBSD</title>
    <id>/post/2013-08-17_03-setting_default_nfsv4_acls_on_freebsd.html</id>
    <updated>2013-08-17T21:11:00Z</updated>
    <link href="/post/2013-08-17_03-setting_default_nfsv4_acls_on_freebsd.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;On FreeBSD with ZFS, only NFSv4 ACLs are supported. At the time of this writing, the &lt;a href="https://wiki.freebsd.org/NFSv4_ACLs"&gt;FreeBSD documentation regarding ACLs&lt;/a&gt; is a bit vague. Specifically, it doesn’t talk about inheritable attributes.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;-d&lt;/code&gt; argument, used to define default POSIX ACLs is not supported. Instead, there are some flags one can set in order to define how ACLs are inherited. For an explanation, look in the manual for &lt;code&gt;setfacl&lt;/code&gt;, section &lt;em&gt;ACL inheritance flags&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let’s say you want all the files and directories inside &lt;code&gt;somedir&lt;/code&gt; to be readable by the users in the group &lt;code&gt;somegroup&lt;/code&gt;. You would do the following:&lt;/p&gt;

            &lt;div class="highlight"&gt;
              &lt;pre&gt;&lt;code&gt;setfacl -m g:somegroup:rx:fd:allow somedir&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
            
&lt;p&gt;This sets &lt;code&gt;somedir&lt;/code&gt; to be readable and executable by &lt;code&gt;somegroup&lt;/code&gt; and those properties will be inherited by all new files (the &lt;code&gt;f&lt;/code&gt; flag) and directories (&lt;code&gt;d&lt;/code&gt; flag).&lt;/p&gt;

&lt;p&gt;Note, however, that this only applies to newly created files. In the FreeBSD implementation of &lt;code&gt;setfacl&lt;/code&gt; there is no recursive option. One way of applying the changes to the subtree is:&lt;/p&gt;

            &lt;div class="highlight"&gt;
              &lt;pre&gt;&lt;code&gt;find . -type d -exec setfacl -m g:somegroup:rx:fd:allow {} \;
find . -type f -exec setfacl -m g:somegroup:r::allow {} \;&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
            
&lt;p&gt;The first line sets the previous ACLs on all the subdirectories, while the second sets the ACL on all the files.&lt;/p&gt;

&lt;p&gt;In order for this to work, some ZFS attributes must be set: &lt;code&gt;aclinherit=passthrough-x&lt;/code&gt; and &lt;code&gt;aclmode=passthrough&lt;/code&gt;.
See &lt;a href="http://docs.oracle.com/cd/E19082-01/817-2271/gbaaz/index.html"&gt;here&lt;/a&gt; for the ZFS properties documentation.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="/feed.atom">
    <title type="text">MySQL Replication - I/O Error Code 1045</title>
    <id>/post/2013-08-17_02-mysql_replication_io_error_code_1045.html</id>
    <updated>2013-08-17T21:05:00Z</updated>
    <link href="/post/2013-08-17_02-mysql_replication_io_error_code_1045.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;Setting up replication on MySQL may yield the following error:&lt;/p&gt;

            &lt;div class="highlight"&gt;
              &lt;pre&gt;&lt;code&gt;[ERROR] Slave I/O: error connecting to master, Error code 1045&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
            
&lt;p&gt;The MySQL troubleshooting page gives a few hints, talking about credentials for the replication user. However, attempting a connection via the command line client works, so the password is OK and the slave can reach the master. As it turns out, for replication purposes, the maximum password length is 32 characters.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="/feed.atom">
    <title type="text">Hello world!</title>
    <id>/post/2013-08-17_01-hello-world.html</id>
    <updated>2013-08-17T20:52:00Z</updated>
    <link href="/post/2013-08-17_01-hello-world.html" />
    <author>
      <name>Vlad Vasiliu</name>
    </author>
    <content type="html">&lt;p&gt;This is a static site. It is generated by &lt;a href="http://lilac.hit9.org/"&gt;lilac&lt;/a&gt; and hosted on &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
